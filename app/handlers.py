from aiogram.types import Message
from aiogram.filters import CommandStart, Command
from aiogram import Bot, Dispatcher, F, Router

import app.keyboards as kb


router = Router()


# –ö–û–ú–ê–ù–î–´
# ---------------------------------------------------- #
# Start
@router.message(CommandStart())
async def cmdStart(message: Message) -> None:
   await message.reply('–ü—Ä–∏–≤–µ—Ç', reply_markup = kb.main)


# Help
@router.message(Command('help'))
async def get_help(message: Message) -> None:
    await message.answer('–ü—Ä–æ–π–¥–∏—Ç–µ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É:', reply_markup = kb.toSanch)


# Sanjar
@router.message(F.text.lower() == '—Å–∞–Ω–∂–∞—Ä')
async def answerToQuestion(message: Message) -> None:
    await message.answer('–û–Ω –º–æ–π —Ä–∞–∑—Ä–∞–±!')


# Getting Photo
@router.message(F.photo)
async def getPhoto(message: Message) -> None:
    await message.answer(f'Photo"s ID: {message.photo}')

# Sending photo
@router.message(Command('get_photo'))
async def sendPhoto(message: Message) -> None:
    await message.answer_photo(photo = 'AgACAgIAAxkBAAMgZxPA_S0X0SE6UmBc0JOK91CzTb0AAoThMRs6kKFInvgVn0EvErYBAAMCAAN5AAM2BA', caption = '–≠—Ç–æ –æ—Ç –°–∞–Ω–∂–∞—Ä–∞')

# –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
@router.message(F.text == '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ üìú')
async def instructions(message: Message) -> None:
    await message.answer('–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/help - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å')

# –ö–æ–Ω—Ç–∞–∫—Ç—ã
@router.message(F.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã üë•')
async def contacts(messaage: Message) -> None:
    await messaage.answer('–ê–≤—Ç–æ—Ä –∏–¥–µ–∏ –∏ –≤–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞:', reply_markup = kb.mainAutor)

# –û –ø—Ä–æ–µ–∫—Ç–µ
@router.message(F.text == '–û –ø—Ä–æ–µ–∫—Ç–µ üè∑Ô∏è')
async def aboutProject(message: Message) -> None:
    await message.answer('–≠—Ç–æ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç\n\n–ò–¥–µ—è –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ–±—ã —Å–æ–¥–∞—Ç—å –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')

# Start
@router.message(F.text == '–ù–∞—á–∞—Ç—å üî≠')
async def start(message: Message) -> None:
    await message.answer('–ù—É —á—Ç–æ–∂, –¥–∞–≤–∞–π—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏–º, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', reply_markup = kb.returnKeyboard)

    await message.answer('1: –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
    with open('user.txt', 'a', encoding='UTF-8') as file:
        file.write(f"–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {message.text}\n")

    await message.answer('2: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
    with open('user.txt', 'a', encoding='UTF-8') as file:
        file.write(f"–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {message.text}\n")

    await message.answer('3: –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞')
    if message.photo:
        photo_id = message.photo[-1].file_id  # –ü–æ–ª—É—á–∞–µ–º ID —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        with open('user.txt', 'a', encoding='UTF-8') as file:
            file.write(f"–§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞: {photo_id}\n")
# ---------------------------------------------------- #